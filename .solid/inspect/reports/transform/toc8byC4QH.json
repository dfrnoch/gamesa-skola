{"resolvedId":"C:/Users/tobis/gamesa-skola/node_modules/solid-start/root/Scripts.tsx?v=2f17421b","transforms":[{"name":"__load__","result":"import { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\n\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\n\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return (\n    <>\n      {isSSR && <HydrationScript />}\n      {isIslands && (\n        <script>{`\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      `}</script>\n      )}\n      <NoHydration>\n        {isServer &&\n          (isDev ? (\n            <>\n              <script type=\"module\" src=\"/@vite/client\" $ServerOnly></script>\n              <script\n                type=\"module\"\n                async\n                src={\"/@fs/\" + import.meta.env.START_ENTRY_CLIENT}\n                $ServerOnly\n              ></script>\n            </>\n          ) : isSSR ? (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"entry-client\"][0].href} />\n          ) : import.meta.env.START_INDEX_HTML ? (\n            // used in the SPA build index.html mode to create a reference to index html\n            // which will be used by the client build\n            <script type=\"module\" async src={import.meta.env.START_ENTRY_CLIENT} $ServerOnly />\n          ) : (\n            // @ts-ignore\n            <script type=\"module\" async src={context!.env.manifest[\"index.html\"][0].href} />\n          ))}\n      </NoHydration>\n      {isDev && <InlineStyles />}\n    </>\n  );\n}\n","start":1676889523990,"end":1676889523990},{"name":"solid","result":"import { template as _$template } from \"solid-js/web\";\nimport { setAttribute as _$setAttribute } from \"solid-js/web\";\nimport { effect as _$effect } from \"solid-js/web\";\nimport { getNextElement as _$getNextElement } from \"solid-js/web\";\nimport { createComponent as _$createComponent } from \"solid-js/web\";\nimport { memo as _$memo } from \"solid-js/web\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<script>\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      </script>`, 2),\n  _tmpl$2 = /*#__PURE__*/_$template(`<script type=\"module\" async></script>`, 2);\nimport { useContext } from \"solid-js\";\nimport { HydrationScript, isServer, NoHydration } from \"solid-js/web\";\nimport { ServerContext } from \"../server/ServerContext\";\nimport { InlineStyles } from \"./InlineStyles\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$getNextElement(_tmpl$), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$getNextElement(), (() => {\n        const _el$3 = _$getNextElement();\n        _$effect(() => _$setAttribute(_el$3, \"src\", \"/@fs/\" + import.meta.env.START_ENTRY_CLIENT));\n        return _el$3;\n      })()] : isSSR ? // @ts-ignore\n      (() => {\n        const _el$4 = _$getNextElement(_tmpl$2);\n        _$effect(() => _$setAttribute(_el$4, \"src\", context.env.manifest[\"entry-client\"][0].href));\n        return _el$4;\n      })() : import.meta.env.START_INDEX_HTML ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      (() => {\n        const _el$5 = _$getNextElement();\n        _$effect(() => _$setAttribute(_el$5, \"src\", import.meta.env.START_ENTRY_CLIENT));\n        return _el$5;\n      })() : // @ts-ignore\n      (() => {\n        const _el$6 = _$getNextElement(_tmpl$2);\n        _$effect(() => _$setAttribute(_el$6, \"src\", context.env.manifest[\"index.html\"][0].href));\n        return _el$6;\n      })());\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}","start":1676889523990,"end":1676889523997,"order":"pre"},{"name":"vite:import-analysis","result":"import.meta.env = {\"BASE_URL\":\"/\",\"MODE\":\"development\",\"DEV\":true,\"PROD\":false,\"SSR\":false};import.meta.env.START_SSR = false;import.meta.env.START_ISLANDS = false;import.meta.env.START_ENTRY_CLIENT = \"C:\\\\Users\\\\tobis\\\\gamesa-skola\\\\src\\\\entry-client.tsx\";import.meta.env.START_ENTRY_SERVER = \"C:\\\\Users\\\\tobis\\\\gamesa-skola\\\\src\\\\entry-server.tsx\";import.meta.env.START_INDEX_HTML = false;import.meta.env.START_ISLANDS_ROUTER = false;import.meta.env.START_ADAPTER = \"vercel\";import { template as _$template } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { setAttribute as _$setAttribute } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { effect as _$effect } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { getNextElement as _$getNextElement } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { createComponent as _$createComponent } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { memo as _$memo } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nconst _tmpl$ = /*#__PURE__*/_$template(`<script>\n        _$HY.islandMap = {};\n        _$HY.island = (u, c) => _$HY.islandMap[u] = c;\n      </script>`, 2),\n  _tmpl$2 = /*#__PURE__*/_$template(`<script type=\"module\" async></script>`, 2);\nimport { useContext } from \"/node_modules/.vite/deps/solid-js.js?v=53da11be\";\nimport { HydrationScript, isServer, NoHydration } from \"/node_modules/.vite/deps/solid-js_web.js?v=53da11be\";\nimport { ServerContext } from \"/node_modules/solid-start/server/ServerContext.tsx?v=2f17421b\";\nimport { InlineStyles } from \"/node_modules/solid-start/root/InlineStyles.tsx?v=2f17421b\";\nconst isDev = import.meta.env.MODE === \"development\";\nconst isSSR = import.meta.env.START_SSR;\nconst isIslands = import.meta.env.START_ISLANDS;\nexport default function Scripts() {\n  const context = useContext(ServerContext);\n  return [isSSR && _$createComponent(HydrationScript, {}), isIslands && _$getNextElement(_tmpl$), _$createComponent(NoHydration, {\n    get children() {\n      return isServer && (isDev ? [_$getNextElement(), (() => {\n        const _el$3 = _$getNextElement();\n        _$effect(() => _$setAttribute(_el$3, \"src\", \"/@fs/\" + import.meta.env.START_ENTRY_CLIENT));\n        return _el$3;\n      })()] : isSSR ? // @ts-ignore\n      (() => {\n        const _el$4 = _$getNextElement(_tmpl$2);\n        _$effect(() => _$setAttribute(_el$4, \"src\", context.env.manifest[\"entry-client\"][0].href));\n        return _el$4;\n      })() : import.meta.env.START_INDEX_HTML ? // used in the SPA build index.html mode to create a reference to index html\n      // which will be used by the client build\n      (() => {\n        const _el$5 = _$getNextElement();\n        _$effect(() => _$setAttribute(_el$5, \"src\", import.meta.env.START_ENTRY_CLIENT));\n        return _el$5;\n      })() : // @ts-ignore\n      (() => {\n        const _el$6 = _$getNextElement(_tmpl$2);\n        _$effect(() => _$setAttribute(_el$6, \"src\", context.env.manifest[\"index.html\"][0].href));\n        return _el$6;\n      })());\n    }\n  }), isDev && _$createComponent(InlineStyles, {})];\n}","start":1676889523998,"end":1676889524003,"order":"normal"}]}
