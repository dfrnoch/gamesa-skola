{"resolvedId":"C:/Users/tobis/gamesa-skola/node_modules/solid-trpc/dist/shared/proxy/decorationProxy.js?v=2f17421b","transforms":[{"name":"__load__","result":"import { createRecursiveProxy } from \"@trpc/server/shared\";\nimport { getQueryKey } from \"../../internals/getQueryKey\";\n/**\n * Create proxy for decorating procedures\n * @internal\n */\nexport function createSolidProxyDecoration(name, hooks) {\n    return createRecursiveProxy((opts) => {\n        const args = opts.args;\n        const pathCopy = [name, ...opts.path];\n        // The last arg is for instance `.useMutation` or `.useQuery()`\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const lastArg = pathCopy.pop();\n        // The `path` ends up being something like `post.byId`\n        const path = pathCopy.join(\".\");\n        if (lastArg === \"useMutation\") {\n            return hooks[lastArg](path, ...args);\n        }\n        return hooks[lastArg](() => getQueryKey(path, typeof args[0] === \"function\" ? args[0]() : args[0]), args[1]);\n    });\n}\n","start":1676889524415,"end":1676889524415},{"name":"vite:import-analysis","result":"import { createRecursiveProxy } from \"/node_modules/@trpc/server/dist/shared/index.mjs?v=2f17421b\";\nimport { getQueryKey } from \"/node_modules/solid-trpc/dist/internals/getQueryKey.js?v=2f17421b\";\n/**\n * Create proxy for decorating procedures\n * @internal\n */\nexport function createSolidProxyDecoration(name, hooks) {\n    return createRecursiveProxy((opts) => {\n        const args = opts.args;\n        const pathCopy = [name, ...opts.path];\n        // The last arg is for instance `.useMutation` or `.useQuery()`\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        const lastArg = pathCopy.pop();\n        // The `path` ends up being something like `post.byId`\n        const path = pathCopy.join(\".\");\n        if (lastArg === \"useMutation\") {\n            return hooks[lastArg](path, ...args);\n        }\n        return hooks[lastArg](() => getQueryKey(path, typeof args[0] === \"function\" ? args[0]() : args[0]), args[1]);\n    });\n}\n","start":1676889524415,"end":1676889524424,"order":"normal"}]}
