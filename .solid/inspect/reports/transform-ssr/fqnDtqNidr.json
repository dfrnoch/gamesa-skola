{"resolvedId":"C:/Users/tobis/gamesa-skola/src/env/server.ts","transforms":[{"name":"__load__","result":"import { serverScheme } from \"./schema\";\r\nimport type { ZodFormattedError } from \"zod\";\r\n\r\nexport const formatErrors = (\r\n  errors: ZodFormattedError<Map<string, string>, string>\r\n) =>\r\n  Object.entries(errors)\r\n    .map(([name, value]) => {\r\n      if (value && \"_errors\" in value)\r\n        return `${name}: ${value._errors.join(\", \")}\\n`;\r\n    })\r\n    .filter(Boolean);\r\n\r\nconst env = serverScheme.safeParse(process.env);\r\n\r\nif (env.success === false) {\r\n  console.error(\r\n    \"❌ Invalid environment variables:\\n\",\r\n    ...formatErrors(env.error.format())\r\n  );\r\n  throw new Error(\"Invalid environment variables\");\r\n}\r\n\r\nexport const serverEnv = env.data;\r\n","start":1676889522834,"end":1676889522834},{"name":"vite:esbuild","result":"import { serverScheme } from \"./schema\";\nexport const formatErrors = (errors) => Object.entries(errors).map(([name, value]) => {\n  if (value && \"_errors\" in value)\n    return `${name}: ${value._errors.join(\", \")}\n`;\n}).filter(Boolean);\nconst env = serverScheme.safeParse(process.env);\nif (env.success === false) {\n  console.error(\n    \"❌ Invalid environment variables:\\n\",\n    ...formatErrors(env.error.format())\n  );\n  throw new Error(\"Invalid environment variables\");\n}\nexport const serverEnv = env.data;\n","start":1676889522834,"end":1676889522836,"order":"normal"},{"name":"vite:define","result":"import { serverScheme } from \"./schema\";\nexport const formatErrors = (errors) => Object.entries(errors).map(([name, value]) => {\n  if (value && \"_errors\" in value)\n    return `${name}: ${value._errors.join(\", \")}\n`;\n}).filter(Boolean);\nconst env = serverScheme.safeParse(process.env);\nif (env.success === false) {\n  console.error(\n    \"❌ Invalid environment variables:\\n\",\n    ...formatErrors(env.error.format())\n  );\n  throw new Error(\"Invalid environment variables\");\n}\nexport const serverEnv = env.data;\n","start":1676889522836,"end":1676889522836,"order":"normal"},{"name":"vite:import-analysis","result":"import { serverScheme } from \"/src/env/schema.ts\";\nexport const formatErrors = (errors) => Object.entries(errors).map(([name, value]) => {\n  if (value && \"_errors\" in value)\n    return `${name}: ${value._errors.join(\", \")}\n`;\n}).filter(Boolean);\nconst env = serverScheme.safeParse(process.env);\nif (env.success === false) {\n  console.error(\n    \"❌ Invalid environment variables:\\n\",\n    ...formatErrors(env.error.format())\n  );\n  throw new Error(\"Invalid environment variables\");\n}\nexport const serverEnv = env.data;\n","start":1676889522836,"end":1676889522837,"order":"normal"}]}
